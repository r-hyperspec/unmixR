[{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"hyperspectral-unmixing","dir":"Articles","previous_headings":"","what":"Hyperspectral Unmixing","title":"","text":"Bryan . Hanson, July 29, 2016 vignette provides general background hyperspectral unmixing. unmixR package provides several vignettes detail main algorithms available package. can access follows:","code":"library(\"unmixR\") browseVignettes(\"unmixR\")"},{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"what-are-hyperspectral-data","dir":"Articles","previous_headings":"Hyperspectral Unmixing","what":"What are Hyperspectral Data?","title":"","text":"Hyperspectral data spectroscopic data collected spatial temporal context. sample spectrum collected particular location time. spectrum thus accompanied meta-data giving information, needed reconstruct images types analysis. following figure illustrates nature typical data set. Note data often collected \\(x,y\\) grid, need . DataCube","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"examples-of-hyperspectral-data-sets","dir":"Articles","previous_headings":"Hyperspectral Unmixing","what":"Examples of Hyperspectral Data Sets","title":"","text":"Hyperspectral data sets encountered many disciplines. examples hyperspectral data sets. Biomedical imaging: series Raman spectra collected microscopic piece tissue scanned \\(x,y\\) plane. studies interest real time imaging surgical tissue samples. types spectroscopy can employed, instance mass spectrometry.1  2 Airborne imaging: satellite, plane drone flies pattern land collects spectra visible, UV NIR range. studies used map mineral formations study quality forest canopies.3  4 Art history: painting scanned examine underlying pigments perhaps reveal presence additional hidden images.5","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"what-is-meant-by-unmixing","dir":"Articles","previous_headings":"Hyperspectral Unmixing","what":"What is Meant by Unmixing?","title":"","text":"Unmixing process taking data set described extracting pure spectra make data. instance, mineral-rich landscape may regions consist pure minerals regions minerals mixed due erosion movement materials. Pure minerals characteristic IR spectra. Spectra collected part airborne imaging study region expected consist many spectral mixtures well pure nearly pure spectra. Terminology: Since many applications involve collecting data \\(x,y\\) grid, often referred image “scene”. scene often said composed “pixels” correspond sample spectra. pure component spectra typically referred “endmembers.” Sometimes simply called components.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"what-information-can-be-obtained","dir":"Articles","previous_headings":"Hyperspectral Unmixing","what":"What Information Can Be Obtained?","title":"","text":"Endmembers: pure spectra components scene. can compared databases analyzed using appropriate domain knowledge determine identity. Abundances: endmembers obtained, can used calculate abundances endmember point scene. , one can make abundance map. mineral-rich landscape example, map particular mineral interest.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"an-example","dir":"Articles","previous_headings":"Hyperspectral Unmixing","what":"An Example","title":"","text":"Much hyperspectral unmixing literature comes field remote sensing airborne platforms employed collect data. mineral-rich landscape example abstraction. frequently used example AVIRIS study cuprite region state Nevada, USA. region devoid vegetation rich geological formations.6 following results based unmixing small portion cuprite data set. first figure shows two endmembers (careful work comparison ground-based geological studies suggest least 19 distinct mineral entities present). Using appropriate domain knowledge endmembers can identified. endmembers next figure abundance map endmembers. Clearly prospector maps great guide finding treasure! abundance map","code":""},{"path":[]},{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"algebraic-description-of-the-data","dir":"Articles","previous_headings":"Hyperspectral Unmixing > The Unmixing Process","what":"Algebraic Description of the Data","title":"","text":"following, lower-case bold letters represent vectors (matrices single row column), e.g. \\(\\mathbf{x}\\). corresponding upper-case letter, \\(\\mathbf{X}\\), represents conceptual quantity, scaled dimension greater 1. Since hyperspectral data sets typically stored samples rows wavelengths columns, \\(\\mathbf{x}\\) particular row \\(\\mathbf{X}\\). hyperspectral data measured \\(p\\) wavelengths, assuming \\(m\\) endmembers present, data hyperspectral study can represented several ways. single sample spectrum location (pixel) time point. can represented \\[ \\mathbf{x}^{(1 \\ \\times \\ p)} = \\mathbf{}^{(1 \\ \\times \\ m)} \\times \\mathbf{E}^{(m \\ \\times \\ p)} + \\epsilon \\] \\(\\mathbf{x}\\) spectrum, \\(\\mathbf{}\\) gives fraction endmember present particular pixel, \\(\\mathbf{E}\\) matrix endmembers, pure component spectra. \\(\\epsilon\\) represents noise. Think \\(\\mathbf{E}\\) library reference spectra. ’s just unmixing don’t library! words, says given spectrum sum product abundance times corresponding reference spectrum, plus noise. scale real data set containing \\(n\\) samples, equation becomes \\[ \\mathbf{X}^{(n \\ \\times \\ p)} = \\mathbf{}^{(n \\ \\times \\ m)} \\times \\mathbf{E}^{(m \\ \\times \\ p)} + \\epsilon \\] \\(\\mathbf{X}\\) matrix raw data \\(\\mathbf{}\\) matrix giving abundances endmember sample (\\(\\mathbf{E}\\) \\(\\epsilon\\) ). drop extra notation, can written \\[ \\mathbf{X} = \\mathbf{}\\mathbf{E} + \\epsilon \\] simplicity. instead scale single wavelength single spectrum, equation becomes \\[ x_k = \\mathbf{} \\times \\mathbf{e}_k \\] \\(k\\) one \\(p\\) wavelengths (\\(\\mathbf{e}_k\\) one wavelength selected reference library \\(\\mathbf{E}\\)). way, way looking data called “linear mixing model” “convex geometry model.” ’ll say latter term bit. system subject several constraints. abundances must positive, must sum one. \\[ 0 \\leqq a_i \\leqq 1 \\] \\[ \\sum_{=1}^{m} a_i = 1 \\] \\(\\) one \\(m\\) endmembers system.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"data-reduction","dir":"Articles","previous_headings":"Hyperspectral Unmixing > The Unmixing Process","what":"Data Reduction","title":"","text":"hyperspectral unmixing algorithms begin sort data reduction step. several possibilities, familiar PCA principal components analysis. PCA widely used method converts raw data uncorrelated abstract components can stand data. advantage don’t need components represent data, even many merely noise. spectral context, equivalent saying wavelengths informative, can discard little change analysis. PCA dimensional reduction method instead \\(p\\) wavelengths, now many fewer abstract components deal . Hence PCA removes noise makes problem computationally much faster. PCA (similar technique), equation describing system : \\[ \\mathbf{X} = \\mathbf{}\\mathbf{E} \\] \\(\\epsilon\\) effectively eliminated. However, important, \\(\\mathbf{X}\\) longer original data, rather abstract components. dimensions still \\(n \\ \\times \\ p\\), \\(p\\) longer \\(p\\), much smaller original number wavelengths. Perhaps called something different, like \\(p'\\), habit literature ignore \\(\\mathbf{X}\\) \\(p\\) longer originally. subsequent steps apply either way, dimension reduction computationally tractable.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"the-role-of-the-simplex","dir":"Articles","previous_headings":"Hyperspectral Unmixing > The Unmixing Process","what":"The Role of the Simplex","title":"","text":"key concept common unmixing algorithms simplex. simplex container holds data points. two-dimensional data (measurements two wavelengths), illustrated , several kinds containers can imagined. “convex hull” container shrink-wrapped around cloud data points. simplex two-dimensional data scalene triangle smallest possible size. 2-Simplex reason simplex interest unmixing purposes, vertices simplex locations endmembers. Sticking two-dimensional example, three vertices correspond theoretically pure components. Every point inside simplex can thought weighted average endmembers. one spectra composed \\(p\\) wavelengths, data exists point cloud \\(p\\)-dimensions. \\(p = 2\\) figure , cloud data can captured 2-simplex triangle. \\(p = 3\\), tetrahedron needed contain data. \\(p > 3\\) simple visual analog container, know \\(p + 1\\) edges. Typical data sets might hundreds even thousands wavelengths. Simplices size hard imagine computationally intractable regardless. Recall section however, prior unmixing process, reduce data (remember \\(p\\) really \\(p\\) longer). Thus, data set perhaps hundreds wavelengths can reduced much smaller dimensionality. practice, \\(p\\) chosen (perhaps say “guessed ”) researcher using relevant domain knowledge. unmixing process seeks find \\(p\\) endmembers data can reconstructed.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"algorithm-options","dir":"Articles","previous_headings":"Hyperspectral Unmixing > The Unmixing Process","what":"Algorithm Options","title":"","text":"background mind, ready read vignettes individual algorithms. number unmixing algorithms described literature. chief difference go finding relevant simplex. unmixR, variations NFINDR, VCA ICE algorithms. See ?nfindr, ?vca, ?ice browseVignettes(\"unmixR\") additional information.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"project-history","dir":"Articles","previous_headings":"Hyperspectral Unmixing","what":"Project History","title":"","text":"development unmixR initiated Claudia Beleites. code written Conor McManus (2013) Anton Belov (2016). Conor Anton participants Google Summer Code program. Additional code written Claudia Bryan . Hanson. Claudia, Bryan Simon Fuller mentors GSOC program.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/IntroUnmixR.html","id":"notes","dir":"Articles","previous_headings":"Hyperspectral Unmixing","what":"Notes","title":"","text":"1 Bergner et. al. “Hyperspectral unmixing Raman micro-images assessment morphological chemical parameters non-dried brain tumor specimens” Anal. Bioanalytical Chemistry vol. 405 . 27 pp. 8719-8728 (2013).↵ 2 Hedegaard et. al. “Spectral unmixing clustering algorithms assessment single cells Raman microscopic imaging” Theoretical Chemistry Accounts vol. 130 . 4-6 pp. 1249-1260 (2011).↵ 3 Green et. al. “Imaging spectroscopy Airborne Visible Infrared Imaging Spectrometer (AVIRIS)” Remote Sensing Environment vol. 65 . 3 pp. 227-248 (1998).↵ 4 Jetz et. al. “Monitoring plant functional diversity space” Nature Plants vol. 2 . 3 pp. ? (2016).↵ 5 Dooley et. al “Mapping egg yolk animal skin glue paint binders Early Renaissance paintings using near infrared reflectance imaging spectroscopy” Analyst vol. 138 . 17 pp. 4838-4848 (2013).↵ 6 Green1998 op. cit. ↵ GSOC Logo","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/ice.html","id":"ice-with-unmixr","dir":"Articles","previous_headings":"","what":"ICE with unmixR","title":"","text":"Anton Belov, July 25, 2016","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/ice.html","id":"algorithm-description","dir":"Articles","previous_headings":"ICE with unmixR","what":"Algorithm Description","title":"","text":"Iterative constrained endmembers iterative cyclic descent algorithm converges optimal solution endmembers. Unlike many algorithms require pure pixels present scene. algorithm makes three steps: Estimate abundances Estimate endmembers Check convergence","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/ice.html","id":"abundances-estimation","dir":"Articles","previous_headings":"ICE with unmixR","what":"Abundances Estimation","title":"","text":"abundances calculated via quadratic programing. two possible situations. First one assumption correct. case vertices inside simplex convex combinations simplex vertices. \\[\\sum_{=1}^{n}a_{}x_{}=r\\] \\(x_{}\\) vertex simplex. convex combination following properties \\[\\sum_{=1}^{n}a_{}=1\\] \\[0\\leqslant a_{}\\leqslant 1\\] convex combination also barycentric one coordinates point barycentric coordinates. find coordinates enough solve following system. \\[\\begin{pmatrix} x_{1} & x_{2} & . & x_{n}\\\\ y_{1} & y_{2} & . & y_{n}\\\\ . & . & . & .\\\\ 1 & 1 & . & 1 \\end{pmatrix}= \\begin{pmatrix} x_{r}\\\\ y_{r}\\\\ .\\\\ 1 \\end{pmatrix}\\] \\(\\) vector abundances. last line constrains sum coordinates also makes combination unique. pure pixels endmembers possible point \\(r\\) outside simplex. barycentric coordinates sum one necessarily non-negative. examples.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/ice.html","id":"point-inside-a-simplex","dir":"Articles","previous_headings":"ICE with unmixR > Abundances Estimation","what":"Point Inside a Simplex","title":"","text":"Let’s calculate abundances. Least squares non-negativity constraint. Ordinary least squares constraints. Since point inside simplex required. methods find solution. happen point inside simplex?","code":"# vertices of a simplex a <- c(1, 1) b <- c(5, 5) c <- c(6, 2) m <- cbind(a, b, c) plot(x = m[1,], y = m[2,]) polygon(x = m[1,], y = m[2,]) # point inside a simplex p <- c(5, 3) points(x = p[1], y = p[2]) m <- rbind(m, rep(1, ncol(m))) p <- c(p, 1) solve(m, p) ##     a     b     c  ## 0.125 0.375 0.500 nnls::nnls(m, p)$x ## [1] 0.125 0.375 0.500 limSolve::lsei(A = m, B = p, verbose = FALSE)$X ##     a     b     c  ## 0.125 0.375 0.500"},{"path":"https://r-hyperspec.github.io/unmixR/articles/ice.html","id":"point-outside-a-simplex","dir":"Articles","previous_headings":"ICE with unmixR > Abundances Estimation","what":"Point Outside a Simplex","title":"","text":"True barycentric coordinates can found solving system linear equations. Least squares non-negativity constraint. Now add constraints least squares method. Note matrix m used m1. Lsei stands least squares equality inequality constraints. solves \\(\\left \\| Ax - b \\right \\|^{2}\\) problem \\(Ex=f\\) \\(Gx\\geq h\\) constraints. abundances sum one means \\[\\begin{pmatrix} 1 & 1 & ... & 1 \\end{pmatrix}\\begin{pmatrix} a_{1}\\\\ a_{2}\\\\ ...\\\\ a_{n} \\end{pmatrix}=1\\] abundances non-negative means \\[\\begin{pmatrix} 1 & 0 & . & 0\\\\ 0 & 1 & . & 0\\\\ . & . & . & .\\\\ 0 & 0 & 0 & 1 \\end{pmatrix}\\begin{pmatrix} a_{1}\\\\ a_{2}\\\\ ...\\\\ a_{n} \\end{pmatrix}\\geqslant \\begin{pmatrix} 0\\\\ 0\\\\ ...\\\\ 0 \\end{pmatrix}\\] resulting point closest point p simplex. case (2, 2). case function solve able find correct answer, two methods successful. Let’s consider another point outside simplex.  resulting point closest point p simplex. case (5.1, 4.7). last method gives correct answer.","code":"m <- cbind(a, b, c) plot(x = m[1,], y = m[2,]) polygon(x = m[1,], y = m[2,]) p <- c(1, 3) points(x = p[1], y = p[2]) m1 <- rbind(m, rep(1, ncol(m))) p1 <- c(p, 1) solve(m1, p1) ##      a      b      c  ##  0.875  0.625 -0.500 nnls::nnls(m1, p1)$x ## [1] 0.75 0.25 0.00 E = rep(1, ncol(m)) G = diag(ncol(m)) H = rep(0, ncol(m)) limSolve::lsei(A = m, B = p, E = E, F = 1, G = G, H = H, verbose = FALSE)$X ##    a    b    c  ## 0.75 0.25 0.00 c(sum(m[1,]*nnls::nnls(m1, p1)$x), sum(m[2,]*nnls::nnls(m1, p1)$x)) ## [1] 2 2 m <- cbind(a, b, c) plot(x = m[1,], y = m[2,]) polygon(x = m[1,], y = m[2,]) p <- c(6, 5) points(x = p[1], y = p[2]) m1 <- rbind(m, rep(1, ncol(m))) p1 <- c(p, 1) solve(m1, p1) ##       a       b       c  ## -0.1875  0.9375  0.2500 nnls::nnls(m1, p1)$x ## [1] 0.0000000 0.9000000 0.2463415 E = rep(1, ncol(m)) G = diag(ncol(m)) H = rep(0, ncol(m)) abundances <- limSolve::lsei(A = m, B = p, E = E, F = 1, G = G, H = H, verbose = FALSE)$X abundances ##   a   b   c  ## 0.0 0.9 0.1 m %*% abundances ##      [,1] ## [1,]  5.1 ## [2,]  4.7"},{"path":"https://r-hyperspec.github.io/unmixR/articles/ice.html","id":"endmember-estimation","dir":"Articles","previous_headings":"ICE with unmixR","what":"Endmember Estimation","title":"","text":"assume pixels linear combinations endmembers. \\[Y = MA\\] \\[^{T}M^{T} = Y^{T}\\] However matrix \\(\\) square thus invertible. calculate \\(M\\) use left inverse matrix \\[(^{T})_{left}^{-1} = (AA^{T})^{-1} \\] \\[AA^{T}M^{T} = AY^{T}\\] \\[(AA^{T})^{-1}AA^{T}M^{T} = (AA^{T})^{-1}AY^{T}\\] \\[M^{T} = (AA^{T})^{-1}AY^{T}\\] make model resistant noise data regularization parameter used. information regularization parameter can found [1]. \\[M^{T} =(AA^{T} + \\lambda (- \\frac{11^{T}}{m}))^{-1}AY^{T}\\]","code":""},{"path":"https://r-hyperspec.github.io/unmixR/articles/ice.html","id":"laser-dataset-example","dir":"Articles","previous_headings":"ICE with unmixR","what":"Laser Dataset Example","title":"","text":"","code":"library(hyperSpec, quietly = TRUE) ## Package hyperSpec, version 0.100.0 ##  ## To get started, try ##    vignette (\"hyperspec\") ##    package?hyperSpec  ##    vignette (package = \"hyperSpec\") ##  ## If you use this package please cite it appropriately. ##    citation(\"hyperSpec\") ## will give you the correct reference. ##  ## The project homepage is http://hyperspec.r-forge.r-project.org library(ggplot2)     library(unmixR) ## Loading required package: MASS ## Loading required package: nnls d <- as.matrix(laser)     Ud <- svd(crossprod(d), nu = 2)$u     reducedData <- d %*% Ud     base::colnames(reducedData) <- c(\"x\", \"y\")     qplot(data =  as.data.frame(reducedData), x = x, y = y,       geom = \"point\", main = \"laser data reduced to dimensionality of 2\") set.seed(1234)     res <- ice(laser, 3)     endm <- res$endmembers     reducedEndmembers <- endm %*% Ud     base::colnames(reducedEndmembers) <- c(\"x\", \"y\")     ggplot() +       geom_point(data =  as.data.frame(reducedData), mapping = aes(x = x, y = y)) +       geom_polygon(data = as.data.frame(reducedEndmembers), mapping = aes(x = x, y = y),         alpha = 0.05, color = \"red\") +       ggtitle(\"Ice simplex\")"},{"path":[]},{"path":"https://r-hyperspec.github.io/unmixR/articles/ice.html","id":"regularization-parameter","dir":"Articles","previous_headings":"ICE with unmixR > Parameters","what":"Regularization Parameter","title":"","text":"parameter penalizes model simplex size. regularization technique makes model less affected noise data. higher value bigger penalty equal 1 simplex shrinks single point. dependence simplex size regularization parameter can seen following picture. Since value usually small consider values equal powers 10.  already, stated small value enough prevent simplex unreasonably large. grey triangle corresponds simplex computed without penalty (mu = 0).","code":"m <- 10^(-1:-5)     m <- c(m, 0)     simplices <- as.data.frame(matrix(ncol = 4))     names(simplices) <- c(\"x\", \"y\", \"muValue\")     simplices <- simplices[-1,]     for (i in m) {         res <- ice(laser, 3, mu = i)$endmembers         reducedEndmembers <- as.data.frame(res %*% Ud)         reducedEndmembers <- cbind(reducedEndmembers, rep(i, nrow(reducedEndmembers)))         names(reducedEndmembers) <- c(\"x\", \"y\", \"muValue\")         simplices <- rbind(simplices, reducedEndmembers)     } ggplot() +       geom_point(data = as.data.frame(reducedData), mapping = aes(x = x, y = y)) +       geom_polygon(data = head(simplices, -3),         mapping = aes(x = x, y = y, colour = muValue, group = muValue),         alpha = 0.05) +       scale_color_gradientn(colours = rainbow(length(m)), trans = \"log10\") +       ggtitle(\"Dependence on mu\") ggplot() +       geom_point(data = as.data.frame(reducedData), mapping = aes(x = x, y = y)) +       geom_polygon(data = simplices,         mapping = aes(x = x, y = y, colour = muValue, group = muValue),         alpha = 0.05) +       scale_color_gradientn(colours = rainbow(length(m)), trans = \"log10\") +       ggtitle(\"Dependence on mu\") ## Warning: Transformation introduced infinite values in discrete y-axis"},{"path":"https://r-hyperspec.github.io/unmixR/articles/ice.html","id":"tolerance-ratio","dir":"Articles","previous_headings":"ICE with unmixR > Parameters","what":"Tolerance Ratio","title":"","text":"tolerance ratio determines number iterations. algorithm asymptotically approaches solution higher values parameter mean result closer optimal one require iterations. value tau usually extremely close 1 following plot shows well. Four simplices corresponding lower values differ much. Simplices correspond 0.9999 0.99999 differ little. means algorithm finds optimal solution value tau less 0.999.  number iterations grows calculation time.","code":"t <- c(0.9, 0.99, 0.999, 0.9999, 0.99999)     simplices <- as.data.frame(matrix(ncol = 4))     names(simplices) <- c(\"x\", \"y\", \"tauValue\")     simplices <- simplices[-1,]     for (i in t) {         res <- ice(laser, 3, t = i)$endmembers         reducedEndmembers <- as.data.frame(res %*% Ud)         reducedEndmembers <- cbind(reducedEndmembers, rep(i, nrow(reducedEndmembers)))         names(reducedEndmembers) <- c(\"x\", \"y\", \"tauValue\")         simplices <- rbind(simplices, reducedEndmembers)     } ggplot() +       geom_point(data = as.data.frame(reducedData), mapping = aes(x = x, y = y)) +       geom_polygon(data = simplices,         mapping = aes(x = x, y = y, colour = tauValue, group = tauValue),         alpha = 0.05) +       scale_color_gradientn(colours = rainbow(3), values = t) +       ggtitle(\"Dependence on tau\") tst <- rbenchmark::benchmark(       ice(laser, 3, t = 0.9),       ice(laser, 3, t = 0.99),       ice(laser, 3, t = 0.999),       ice(laser, 3, t = 0.9999),       ice(laser, 3, t = 0.99999))     tst[,1:5] ##                         test replications elapsed relative user.self ## 1     ice(laser, 3, t = 0.9)          100   2.678    1.000     2.678 ## 2    ice(laser, 3, t = 0.99)          100   4.412    1.647     4.407 ## 3   ice(laser, 3, t = 0.999)          100   5.318    1.986     5.318 ## 4  ice(laser, 3, t = 0.9999)          100   5.200    1.942     5.199 ## 5 ice(laser, 3, t = 0.99999)          100   5.369    2.005     5.364"},{"path":"https://r-hyperspec.github.io/unmixR/articles/unmixUnittests.html","id":"unmixr-unit-test-report","dir":"Articles","previous_headings":"","what":"unmixR unit test report","title":"","text":"vignette runs unit tests build time.","code":"require (\"unmixR\") ## Loading required package: unmixR ## Loading required package: hyperSpec ## Loading required package: lattice ## Loading required package: grid ## Loading required package: ggplot2 ## Loading required package: xml2 ## Package hyperSpec, version 0.100.0 ##  ## To get started, try ##    vignette (\"hyperspec\") ##    package?hyperSpec  ##    vignette (package = \"hyperSpec\") ##  ## If you use this package please cite it appropriately. ##    citation(\"hyperSpec\") ## will give you the correct reference. ##  ## The project homepage is http://hyperspec.r-forge.r-project.org ## Loading required package: MASS ## Loading required package: nnls require (\"testthat\") ## Loading required package: testthat unmixR.unittest () ## nfindrBrute: ... ## nfindr.formula: ...... ## vca: ......SSSS. ## simplex_volume: ..S.. ## vca.formula: .... ## options: . ## nfindrLDU: S ## N-FINDR: ............S.. ## simplex_E: ..... ## ══ Skipped ═════════════════════════════════════════════════════════════════════ ## 1. correct results for all available methods: triangle data (???) - Reason: Skip tests to implement GHA infrastructure. Fix the tests ASAP ##  ## 2. no duplicates with Lopez2012 for test data (???) - Reason: known issue: #36 ##  ## 3. correct results for all available methods: laser data (???) - Reason: temporarily disabled ##  ## 4. vca output is sorted (???) - Reason: Skip tests to implement GHA infrastructure. Fix the tests ASAP ##  ## 5. correct volumes for triangle data (???) - Reason: Skip tests to implement GHA infrastructure. Fix the tests ASAP ##  ## 6. nfindrLDU with simplex corners being straight line (???) - Reason: LDU skipped: known issue #38 ##  ## 7. All implementations return correct results for triangle data (???) - Reason: LDU skipped: known issue #38 ##  ## ══ DONE ════════════════════════════════════════════════════════════════════════ ## Nice code."},{"path":"https://r-hyperspec.github.io/unmixR/articles/vca.html","id":"vca-with-unmixr","dir":"Articles","previous_headings":"","what":"VCA with unmixR","title":"","text":"Anton Belov, July 1, 2016","code":"library(plot3D) ## Warning: no DISPLAY variable so Tk is not available library(hyperSpec, quietly = TRUE) ## Package hyperSpec, version 0.100.0 ##  ## To get started, try ##    vignette (\"hyperspec\") ##    package?hyperSpec  ##    vignette (package = \"hyperSpec\") ##  ## If you use this package please cite it appropriately. ##    citation(\"hyperSpec\") ## will give you the correct reference. ##  ## The project homepage is http://hyperspec.r-forge.r-project.org d <- unmixR:::.testdata$x     str(d) ##  'AsIs' num [1:10, 1:3] 0 1 2 3 0 1 2 0 1 0 ... ##  - attr(*, \"dimnames\")=List of 2 ##   ..$ samples    : chr [1:10] \"1\" \"2\" \"3\" \"4\" ... ##   ..$ wavelengths: chr [1:3] \"L1\" \"L2\" \"L3\" scatter3D(d[, 1], d[, 2], d[, 3], pch = 20, col = matlab.dark.palette(), phi = 50, theta = 110)"},{"path":"https://r-hyperspec.github.io/unmixR/articles/vca.html","id":"dimensionality-reduction","dir":"Articles","previous_headings":"VCA with unmixR","what":"Dimensionality Reduction","title":"","text":"algorithm uses two dimensionality reduction techniques. choice depends signal noise ratio data. threshold value equal \\(15 + 10 \\log p\\) dimensionality reduction function reduces dimensionality data also transforms amplify noise.","code":"library(unmixR, quietly = TRUE)     dim(d) ## [1] 10  3 endNum <- 3     snrThreshhold <- 15 + 10 * log10(endNum)     sameReduced <- dimensionalityReduction(d, endNum, snrThreshhold + 1)     lowerReduced <- dimensionalityReduction(d, endNum, snrThreshhold - 1)"},{"path":"https://r-hyperspec.github.io/unmixR/articles/vca.html","id":"plotting-the-data","dir":"Articles","previous_headings":"VCA with unmixR","what":"Plotting the Data","title":"","text":"Using second approach, algorithm projects data onto subspace even lower dimensionality sets “missing” dimension values certain value. points colored red z value, data reduced dimensionality 2 (x y) z value set certain number.  Since noise example low algorithm use first approach.","code":"library(scatterplot3d, quietly = TRUE)     colnames(sameReduced) <- c(\"x\", \"y\", \"z\")     colnames(lowerReduced) <- c(\"x\", \"y\", \"z\")     scatterplot3d(sameReduced, main = \"given dimensionality reduced data\") scatterplot3d(lowerReduced, main = \"lower dimensionality reduced data\") my3dplot <- scatterplot3d(lowerReduced, color = \"red\",       zlim = c(-1, 3), main = \"transformed data\")     my3dplot$points3d(sameReduced, type = \"h\", col = \"blue\")     legend(x = \"bottomright\", pch = 1, col = c(\"blue\", \"red\"),       legend = c(\"same\", \"lower\"))"},{"path":"https://r-hyperspec.github.io/unmixR/articles/vca.html","id":"the-vca-process-illustrated","dir":"Articles","previous_headings":"VCA with unmixR","what":"The VCA Process, Illustrated","title":"","text":"VCA algorithm works follows: data reduced dimensionality equal \\(p\\) \\(p\\) desired (estimated) number endmembers. mentioned , details reduction depend upon signal--noise ratio raw data. Initialize \\(\\), \\(p \\times p\\) matrix store endmembers. first column set constant, represents initial “fake” endmember get process started. Calculate reference vector orthogonal subspace spanned columns \\(\\). vector pass (0,0,…,0). Project data points onto reference vector. Find data point’s projection onto reference vector furthest origin. equivalent data point maximum absolute projection onto reference vector. Let \\(k\\) index data point dataset. Set \\(\\)-th column \\(\\) \\(k\\)-th column data. one endmembers. Return \\(\\). following plots illustrate process 3-dimensional data set consisting number points lie plane form triangle. system initialized “fake” endmember coordinates \\((0,0,1)\\) reference vector \\(f\\) orthogonal endmember (point) computed. , data point projected onto reference vector. data point whose projection intersection \\(f\\) farthest origin selected first (real) endmember (fake endmember discarded). next plot shows steps. first endmember lower-left.  first real endmember used construct new reference vector \\(f\\) data points projected onto \\(f\\) projection intersection \\(f\\) farthest origin selected next endmember. following plot, 2nd endmember selected top-data point.  two endmembers identified, continue process starting recently identified endmember. next plot, 3rd endmember right-data point. ’s projection onto reference vector \\(f\\) short visible data point nearly falls \\(f\\). plot next, carrying along vectors used construct reference vectors \\(f\\) step.  Finally endmembers identified.  process extended \\(p\\)-dimensions, reference vector \\(f\\) line \\(p\\)-dimensional space. Thus process choose point, construct orthogonal vector \\(f\\), determine data point extreme projection onto vector. point chosen endmember process repeated desired endmembers identified.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anton Belov. Author. Conor McManus. Author. Claudia Beleites. Author, maintainer. Bryan . Hanson. Author. Simon Fuller. Author.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Belov , McManus C, Beleites C, Hanson B, Fuller S (2022). unmixR: Hyperspectral Unmixing Methods. R package version 0.2.339, https://gitlab.com/chemometrics/unmixR.","code":"@Manual{,   title = {unmixR: Hyperspectral Unmixing Methods},   author = {Anton Belov and Conor McManus and Claudia Beleites and Bryan A. Hanson and Simon Fuller},   year = {2022},   note = {R package version 0.2.339},   url = {https://gitlab.com/chemometrics/unmixR}, }"},{"path":"https://r-hyperspec.github.io/unmixR/index.html","id":"unmixr-an-r-package-for-unmixing-of-hyperspectral-images","dir":"","previous_headings":"","what":"Hyperspectral Unmixing Methods","title":"Hyperspectral Unmixing Methods","text":"fundamental structures & behavior may change. time , use risk. Hyperspectral data also called ‘imaging spectroscopy’ ‘imaging spectrometer data’ depending upon discipline. data consists spectra collected x, y grid. Data sets like found airborne land imaging studies, biomedical studies art history investigations. spectra often visible, infrared, near-infrared, raman spectra mass spectrometer data sets.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hyperspectral Unmixing Methods","text":"Installation: works easiest using remotes::install_git():","code":"require(\"remotes\") install_git(\"https://gitlab.com/chemometrics/unmixR.git\", subdir = \"pkg/unmixR\")"},{"path":"https://r-hyperspec.github.io/unmixR/index.html","id":"acknoledgements","dir":"","previous_headings":"","what":"Acknoledgements","title":"Hyperspectral Unmixing Methods","text":"Development unmixR supported Google Summer Code 2013 (Conor McManus) 2016 (Anton Belov). Thank Google! GSOC 2016 logo","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/demo_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Demonstration Data for unmixR — demo_data","title":"Demonstration Data for unmixR — demo_data","text":"simulated data set 10 samples, measured 20 frequencies.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/demo_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demonstration Data for unmixR — demo_data","text":"","code":"data(demo_data)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/demo_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demonstration Data for unmixR — demo_data","text":"10 x 20 matrix, samples rows.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/demo_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Demonstration Data for unmixR — demo_data","text":"","code":"data(demo_data) # plot the (nearly pure) endmembers matplot(t(demo_data[c(3, 7, 9),]), type = \"l\",   col = c(\"black\", \"red\", \"blue\"), lty = 1,   xlab = \"frequency\", ylab = \"intensity\",   main = \"demo_data\") leg.txt <- c(\"Endmember 1\", \"Endmember 2\", \"Endmember 3\") legend(\"topright\", leg.txt, col = c(\"black\", \"red\", \"blue\"), cex = 0.75, lty = 1)   if (FALSE) { # demo_data was created as follows set.seed(123)  n <- 10 # no. of samples p <- 20 # no. of frequencies  ## endmembers / pure spectra / endmember matrix em1 <- c(0, 0, 0, 5, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0) em2 <- c(0, 0, 0, 0, 0, 8, 7, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0) em3 <- c(0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0) eM <- matrix(c(em1, em2, em3), byrow = TRUE, ncol = 20)  ## weights matrix  wM <- matrix(runif(30), nrow = n) # set certain samples (weights) to pure endmembers wM[3, c(2, 3)] <- 0 # em1 wM[7, c(1, 3)] <- 0 # em2 wM[9, c(1, 2)] <- 0 # em3 wM <- wM/rowSums(wM) # normalize weights matrix  ## data matrix (weighted averages) dM <- wM %*% eM  ## add in some noise demo_data <- dM + matrix(rnorm(n*p), nrow = n) }"},{"path":"https://r-hyperspec.github.io/unmixR/reference/dimensionalityReduction.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensionality Reduction Contingent on SNR — dimensionalityReduction","title":"Dimensionality Reduction Contingent on SNR — dimensionalityReduction","text":"Reduces dimensionality data matrix signal--noise ratio (SNR) certain threshold.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/dimensionalityReduction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensionality Reduction Contingent on SNR — dimensionalityReduction","text":"","code":"dimensionalityReduction(data, p, SNR = estSNR(data, p))"},{"path":"https://r-hyperspec.github.io/unmixR/reference/dimensionalityReduction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensionality Reduction Contingent on SNR — dimensionalityReduction","text":"data Data matrix. Samples rows frequencies columns. p Number endmembers. SNR Signal--Noise ratio data. default estimated using estSNR.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/dimensionalityReduction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensionality Reduction Contingent on SNR — dimensionalityReduction","text":"Data matrix dimensionality equal p.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/dimensionalityReduction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dimensionality Reduction Contingent on SNR — dimensionalityReduction","text":"SNR threshold calculated 15 + 10*log10(p).  input matrix SNR exceeds value, data reduced dimension p. SNR value, data first reduced p-1 later restored dimension p.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/dimensionalityReduction.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dimensionality Reduction Contingent on SNR — dimensionalityReduction","text":"Nascimento, J.M.P. Bioucas Dias, J.M. \"Vertex component   analysis: fast algorithm unmix hyperspectral data,\" Geoscience   Remote Sensing, vol. 43, . 4, pp. 898-910, April 2005,   doi: 10.1109/TGRS.2005.844293","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/endmembers.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve N-FINDR/VCA Endmembers — endmembers","title":"Retrieve N-FINDR/VCA Endmembers — endmembers","text":"Retrieves endmembers dataset using model returned nfindr vca.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/endmembers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve N-FINDR/VCA Endmembers — endmembers","text":"","code":"endmembers(object)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/endmembers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve N-FINDR/VCA Endmembers — endmembers","text":"object N-FINDR/VCA structure returned general nfindr vca interface.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/endmembers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve N-FINDR/VCA Endmembers — endmembers","text":"matrix row endmember calculated   unmixing algorithm.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/endmembers.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Retrieve N-FINDR/VCA Endmembers — endmembers","text":"dimension reduction performed prior unmixing function returns scores corresponding endmembers.  case, get original spectra probably want raw_data[unmixR_results$indices,].","code":""},{"path":[]},{"path":"https://r-hyperspec.github.io/unmixR/reference/estSNR.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Signal to Noise Ratio — estSNR","title":"Estimate Signal to Noise Ratio — estSNR","text":"Estimate signal noise ratio hyperspectral image.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/estSNR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Signal to Noise Ratio — estSNR","text":"","code":"estSNR(data, p)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/estSNR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Signal to Noise Ratio — estSNR","text":"data hyperspectral image whose signal noise ratio needs estimated.  Samples rows, frequencies columns. p number endmembers.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/estSNR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Signal to Noise Ratio — estSNR","text":"estimated signal noise ratio decibels.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/estSNR.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Estimate Signal to Noise Ratio — estSNR","text":"careful,   function called vca05 data already   transposed due   lazy evaluation.  want get answer calling function   directly, need transpose data first!","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/estSNR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate Signal to Noise Ratio — estSNR","text":"Nascimento, J.M.P. Bioucas Dias, J.M. \"Vertex component   analysis: fast algorithm unmix hyperspectral data,\" Geoscience   Remote Sensing, vol. 43, . 4, pp. 898-910, April 2005,    doi: 10.1109/TGRS.2005.844293","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/get.implementations.html","id":null,"dir":"Reference","previous_headings":"","what":"Find implementatios — get.implementations","title":"Find implementatios — get.implementations","text":"Fnd currently available implementations methdos like \"nfindr\" \"vca\").","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/get.implementations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find implementatios — get.implementations","text":"","code":"get.implementations(   method,   search.paths = unmixR.options(\"implementation.search\") )"},{"path":"https://r-hyperspec.github.io/unmixR/reference/get.implementations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find implementatios — get.implementations","text":"method method (e.g. \"nfindr\" \"vca\") search.paths vector packages /environment searched implementations. Give packages form \"package:unmixR\".","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/get.implementations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find implementatios — get.implementations","text":"vector available method names","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/get.implementations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find implementatios — get.implementations","text":"","code":"get.implementations (\"nfindr\") #> [1] \"99\"     \"Brute\"  \"LDU\"    \"SeqLDU\""},{"path":"https://r-hyperspec.github.io/unmixR/reference/ice.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterated Constrained endmembers — ice","title":"Iterated Constrained endmembers — ice","text":"method iteratively computes endmembers abundances using quadratic programming converges solution.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/ice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterated Constrained endmembers — ice","text":"","code":"ice(data, p, mu = 1e-05, t = 0.9999)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/ice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterated Constrained endmembers — ice","text":"data Data matrix. Samples rows frequencies columns. p Number endmembers. mu Regularization parameter 0 1 penaltizes model  large simplex volume. smaller value bigger simplex t Tolerance ratio 0 1 affects number iterations. higher value iterations.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/ice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterated Constrained endmembers — ice","text":"Structure endmembers abundances \\(abundances * endmembers = data\\_\\) data\\_ approximation data. Endmembers matrix samples rows frequencies columns.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/ice.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Iterated Constrained endmembers — ice","text":"M. Berman, H. Kiiveri, R. Lagerstrom, . Ernst, R. Dunne, J. F. Huntington, \"Ice: statistical approach identifying endmembers hyperspectral images: Learning Earth's shapes colors,\" IEEE Trans. Geosci. Remote Sens., vol. 42, . 10, pp. 2085-2095, Oct. 2004. E. M. Sigurdsson, . Plaza J. . Benediktsson, \"GPU Implementation  Iterative-Constrained Endmember Extraction Remotely Sensed Hyperspectral Images,\" IEEE Journal Selected Topics Applied Earth Observations Remote Sensing, vol. 8, . 6, pp. 2939-2949, June 2015. doi: 10.1109/JSTARS.2015.2441699","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindr.html","id":null,"dir":"Reference","previous_headings":"","what":"General Interface to N-FINDR Spectral Unmixing Implementations — nfindr","title":"General Interface to N-FINDR Spectral Unmixing Implementations — nfindr","text":"N-FINDR techniques based fact , N spectral dimensions, N-volume contained simplex formed purest pixels larger volume formed combination pixels.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Interface to N-FINDR Spectral Unmixing Implementations — nfindr","text":"","code":"nfindr(...)  # S3 method for default nfindr(   data,   p,   method = \"99\",   indices = sample(nrow(data), p),   ...,   EMonly = FALSE )  # S3 method for formula nfindr(formula, frame, ...)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Interface to N-FINDR Spectral Unmixing Implementations — nfindr","text":"... Additional parameters methods (currently unused). data Data unmix. converted matrix using .matrix. matrix contain spectrum per row. data dimensionally reduced using PCA. want reduce data using method reduce first set drop TRUE. p Number endmembers. method N-FINDR algorithm use. Options: 99 (nfindr99) LDU (nfindrLDU) SeqLDU (nfindrSeqLDU) Brute (nfindrBrute) Default: LDU generally performs best. indices Locations rows dataset used form initial simplex. Default: Randomly selected indices. EMonly Boolean indicates whether data parameter stored resulting structure. set TRUE data passed already reduced. formula Formula object. frame Data frame containing hyperspectral data.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General Interface to N-FINDR Spectral Unmixing Implementations — nfindr","text":"list contains:  data: original data reduced data drop                          set TRUE. indices: indices spectra increased                             simplex volume .                             indices endmembers. drop set                             TRUE indices 1 p.","code":""},{"path":[]},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Interface to N-FINDR Spectral Unmixing Implementations — nfindr","text":"","code":"data(demo_data) demo <- nfindr(demo_data, 2, method = \"99\") em <- endmembers(demo) em <- rbind(demo_data[c(3,7),], em) em[3:4,] <- em[3:4,] + 0.5 # a small offset for the found em's matplot(t(em), type = \"l\",    col = c(\"black\", \"red\", \"black\", \"red\"), lty = c(1, 1, 2, 2),    xlab = \"frequency\", ylab = \"intensity\",    main = \"N-FINDR 99 of demo_data\") leg.txt <- c(\"Endmember 1\", \"Endmember 2\", \"Endmember 1 (found)\", \"Endmember 2 (found)\") legend(\"topright\", leg.txt, col = c(\"black\", \"red\", \"black\", \"red\"), lty = c(1, 1, 2, 2), cex = 0.75)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindr99.html","id":null,"dir":"Reference","previous_headings":"","what":"Michael E. Winter's 1999 N-FINDR Unmixing Algorithm — nfindr99","title":"Michael E. Winter's 1999 N-FINDR Unmixing Algorithm — nfindr99","text":"technique based fact , N spectral dimensions, N-volume contained simplex formed purest pixels larger volume formed combination pixels. Intended called nfindr.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindr99.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Michael E. Winter's 1999 N-FINDR Unmixing Algorithm — nfindr99","text":"","code":"nfindr99(data, p, indices, iters = 3 * p)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindr99.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Michael E. Winter's 1999 N-FINDR Unmixing Algorithm — nfindr99","text":"data Data matrix unmix. p Number endmembers. indices Indices used simplex estimation. iters Max number iterations, defaults 3*p.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindr99.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Michael E. Winter's 1999 N-FINDR Unmixing Algorithm — nfindr99","text":"indices endmembers original dataset.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindr99.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Michael E. Winter's 1999 N-FINDR Unmixing Algorithm — nfindr99","text":"Michael E. Winter \"N-FINDR: algorithm fast autonomous   spectral end-member determination hyperspectral data\", Proc.   SPIE 3753, Imaging Spectrometry V, 266 (October 27, 1999),    doi:10.1117/12.366289","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrBrute.html","id":null,"dir":"Reference","previous_headings":"","what":"Brute Force N-FINDR — nfindrBrute","title":"Brute Force N-FINDR — nfindrBrute","text":"method exhaustively checks every possible simplex formed p points returns indices generate simplex largest volume. indicate endmembers based theory N-FINDR. used testing purposes extremely slow non-trivial datasets. Intended called nfindr.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrBrute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brute Force N-FINDR — nfindrBrute","text":"","code":"nfindrBrute(data, p, ..., debuglevel = .options(\"debuglevel\"))"},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrBrute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Brute Force N-FINDR — nfindrBrute","text":"data Data matrix unmix. p Number endmembers. ... Extra unused parameters passed  nfindr. debuglevel >= 1L, print top simplices  corresponding volume.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrBrute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Brute Force N-FINDR — nfindrBrute","text":"indices endmembers original dataset  data.frame holding indices corresponding volume volume = TRUE.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrLDU.html","id":null,"dir":"Reference","previous_headings":"","what":"LDU N-FINDR: 2013 Improved N-FINDR Algorithm Based on LU Decompositions — nfindrLDU","title":"LDU N-FINDR: 2013 Improved N-FINDR Algorithm Based on LU Decompositions — nfindrLDU","text":"approach calculates M LU decompositions, one column permuted last position, reuses decompositions pixel permanent replacement requires calculation new set decompositions. Intended called nfindr.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrLDU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LDU N-FINDR: 2013 Improved N-FINDR Algorithm Based on LU Decompositions — nfindrLDU","text":"","code":"nfindrLDU(data, p, indices, ..., debuglevel = unmixR.options(\"debuglevel\"))"},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrLDU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LDU N-FINDR: 2013 Improved N-FINDR Algorithm Based on LU Decompositions — nfindrLDU","text":"data Data matrix unmix. p Number endmembers. indices Indices used simplex estimation. ... Extra unused parameters passed nfindr. debuglevel >= 1L, print simplices  corresponding volume.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrLDU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LDU N-FINDR: 2013 Improved N-FINDR Algorithm Based on LU Decompositions — nfindrLDU","text":"indices endmembers original dataset.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrLDU.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"LDU N-FINDR: 2013 Improved N-FINDR Algorithm Based on LU Decompositions — nfindrLDU","text":"Dowler, Shaun W., Takashima, Reymond, Andrews, Mark   \"Reducing complexity N-FINDR algorithm hyperspectral   image analysis.\", IEEE Trans Image Process. 2013 22(7):2835-2848   doi: 10.1109/TIP.2012.2219546","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrSeqLDU.html","id":null,"dir":"Reference","previous_headings":"","what":"LDU-Sequential N-FINDR: Slightly Modified LDU N-FINDR — nfindrSeqLDU","title":"LDU-Sequential N-FINDR: Slightly Modified LDU N-FINDR — nfindrSeqLDU","text":"LDU N-FINDR examines single pixel endmember position repeats pixels, algorithm considers pixels single endmember position repeats endmember positions. Intended called nfindr.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrSeqLDU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LDU-Sequential N-FINDR: Slightly Modified LDU N-FINDR — nfindrSeqLDU","text":"","code":"nfindrSeqLDU(data, p, indices, ...)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrSeqLDU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LDU-Sequential N-FINDR: Slightly Modified LDU N-FINDR — nfindrSeqLDU","text":"data Data matrix unmix. p Number endmembers. indices Indices used simplex estimation. ... Extra unused parameters passed nfindr.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrSeqLDU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LDU-Sequential N-FINDR: Slightly Modified LDU N-FINDR — nfindrSeqLDU","text":"indices endmembers original dataset.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/nfindrSeqLDU.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"LDU-Sequential N-FINDR: Slightly Modified LDU N-FINDR — nfindrSeqLDU","text":"Dowler, Shaun W., Takashima, Reymond, Andrews, Mark   \"Reducing complexity N-FINDR algorithm hyperspectral   image analysis.\", IEEE Trans Image Process. 2013 22(7):2835-2848   doi: 10.1109/TIP.2012.2219546","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/options.html","id":null,"dir":"Reference","previous_headings":"","what":"unmixR's package options — unmixR.options","title":"unmixR's package options — unmixR.options","text":"unmixR uses settings option management.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unmixR's package options — unmixR.options","text":"","code":"unmixR.options(...)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"unmixR's package options — unmixR.options","text":"... either key = value pairs set options names options retrieve. parameters passed, list options returned.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"unmixR's package options — unmixR.options","text":"Either list current options value requested option.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"unmixR's package options — unmixR.options","text":"following package-specific options defined: debuglevel Indicates much debuging output produced. value 1 reports overall progress identifying endmembers. Values > 1 give additional details internal processing. implementation.search (default: \"package:unmixR\")   Environments search unmixing algorithm implementations. implementation.search: register packages providing additional implementations appending \"package:packagename\".  Implementations. global environment can added \".GlobalEnv\".","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"unmixR's package options — unmixR.options","text":"","code":"unmixR.options () # show all options #> $debuglevel #> [1] 0 #>  #> $implementation.search #> [1] \"package:unmixR\" #>  unmixR.options (\"debuglevel\") # show just this one option #> [1] 0 unmixR.options (debuglevel = 0L) # set an option"},{"path":"https://r-hyperspec.github.io/unmixR/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Endmember Abundances — predict","title":"Predict Endmember Abundances — predict","text":"Predicts abundance percentages endmember sample points using Non-Negative Least Squares method.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Endmember Abundances — predict","text":"","code":"# S3 method for nfindr predict(object, newdata, ...)  # S3 method for vca predict(object, newdata, ...)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Endmember Abundances — predict","text":"object N-FINDR/VCA structure returned nfindr vca interface. newdata data stored object data checked abundances, parameter allows passing new data. ... Allow extra parameters match signature base predict function.  example, may wish pass different data argument newdata.  default, data object used.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Endmember Abundances — predict","text":"matrix abundances endmember returned   column-wise. value range [0 - 1].","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Endmember Abundances — predict","text":"","code":"data(demo_data) demo <- nfindr(demo_data, p = 3) pred_wM <- predict(demo)  # The following is from demo_data set.seed(123)  n <- 10 # no. of samples p <- 20 # no. of frequencies  ## endmembers / pure spectra / endmember matrix em1 <- c(0, 0, 0, 5, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0) em2 <- c(0, 0, 0, 0, 0, 8, 7, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0) em3 <- c(0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0) eM <- matrix(c(em1, em2, em3), byrow = TRUE, ncol = 20)  ## weights matrix  wM <- matrix(runif(30), nrow = n) # set certain samples (weights) to pure endmembers wM[3, c(2, 3)] <- 0 # em1 wM[7, c(1, 3)] <- 0 # em2 wM[9, c(1, 2)] <- 0 # em3 wM <- wM/rowSums(wM) # normalize weights matrix  # Now compare the predicted abundances to the known values hist(pred_wM - wM, breaks = 50)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/simplex.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a simplex volume matrix — .simplex_E","title":"Generate a simplex volume matrix — .simplex_E","text":"Simple helper function generating simplex volume matrix E (.e. volume simplex = det(E)/p-1!) following structure: |   1   1   ... 1 | | e_1 e_2 ... e_p | e_i -th vertex point simplex.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/simplex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a simplex volume matrix — .simplex_E","text":"","code":".simplex_E(data, indices = 1:nrow(data))"},{"path":"https://r-hyperspec.github.io/unmixR/reference/simplex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a simplex volume matrix — .simplex_E","text":"data Matrix whose rows included simplex. matrix reduced using using PCA process p-1 columns calling function. indices Locations rows dataset use simplex vertecies","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/simplex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a simplex volume matrix — .simplex_E","text":"simplex volume matrix E, p x p matrix whose first row contains 1s","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/simplex_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"Volume of simples — simplex_volume","title":"Volume of simples — simplex_volume","text":"Volume simples","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/simplex_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volume of simples — simplex_volume","text":"","code":"simplex_volume(data, indices = seq_len(nrow(data)), factorial = TRUE)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/simplex_volume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volume of simples — simplex_volume","text":"data matrix coordinates rows indices indices  ncol(data) + 1 vertex points. Defaults rows. factorial logical indicating whether proper volumes (.e. determinant, actually taking account proper 1 / n! prefactor)","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/simplex_volume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volume of simples — simplex_volume","text":"volume simplex","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/simplex_volume.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Volume of simples — simplex_volume","text":"","code":"data <- prcomp(laser)$x[, 1:2] plot(data, pch = 19, col = matlab.dark.palette(nrow(data))) lines(data[c(1, 84, 50, 1), ])   simplex_volume(data, indices = c(1, 84, 50)) #> [1] 212839039"},{"path":"https://r-hyperspec.github.io/unmixR/reference/unmixR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Hyperspectral Unmixing Methods — unmixR-package","title":"Hyperspectral Unmixing Methods — unmixR-package","text":"Functions implementing N-FINDR, Iterated Constrained Endmembers (ICE) Vertex Component Analysis (VCA) algorithms can recover pure component spectra respective concentrations hyperspectral data set.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/unmixR-package.html","id":"acknowledgement","dir":"Reference","previous_headings":"","what":"Acknowledgement","title":"Hyperspectral Unmixing Methods — unmixR-package","text":"development unmixR supported Google Summer Code 2013 (Conor McManus, v0.1) 2016 (Anton Belov, v0.2).  support Google greatly appreciated.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/unmixR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hyperspectral Unmixing Methods — unmixR-package","text":"Anton Belov, Conor McManus, Claudia Beleites, Bryan . Hanson, Simon Fuller. Maintainer: Claudia Beleites <chemometrie@beleites.de>","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/unmixR.unittest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Unit Tests — unmixR.unittest","title":"Run the Unit Tests — unmixR.unittest","text":"Run unit tests package output given testthat reporter.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/unmixR.unittest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Unit Tests — unmixR.unittest","text":"","code":"unmixR.unittest()"},{"path":"https://r-hyperspec.github.io/unmixR/reference/unmixR.unittest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Unit Tests — unmixR.unittest","text":"Invisibly returns data frame test results","code":""},{"path":[]},{"path":"https://r-hyperspec.github.io/unmixR/reference/unmixR.unittest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run the Unit Tests — unmixR.unittest","text":"Claudia Beleites","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/vca.html","id":null,"dir":"Reference","previous_headings":"","what":"General Interface to Vertex Component Analysis Spectral Unmixing\nImplementations — vca","title":"General Interface to Vertex Component Analysis Spectral Unmixing\nImplementations — vca","text":"algorithm based geometry convex sets. exploits fact endmembers occupy vertices simplex.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/vca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Interface to Vertex Component Analysis Spectral Unmixing\nImplementations — vca","text":"","code":"vca(...)  # S3 method for default vca(   data,   p,   method = c(\"05\", \"Lopez2012\"),   seed = NULL,   SNR = estSNR(data, p),   ...,   EMonly = FALSE )  # S3 method for formula vca(formula, frame, p, method = \"05\", seed = NULL, ...)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/vca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Interface to Vertex Component Analysis Spectral Unmixing\nImplementations — vca","text":"... Additional parameters methods (currently unused). data Data matrix. converted matrix using .matrix. matrix contain spectrum per row. p Number endmembers. method VCA algorithm use. Options: 05 (vca05) Lopez2012 (vcaLopez2012) Default: 05. seed vca05 generates random vector. Set random number generator seed argument. SNR Signal--Noise ratio data. default estimated using estSNR. EMonly Boolean indicates whether data parameter stored resulting structure. formula Formula object. frame Data frame containing hyperspectral data.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/vca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General Interface to Vertex Component Analysis Spectral Unmixing\nImplementations — vca","text":"list contains:  data: original data. indices: indices calculated endmembers.","code":""},{"path":[]},{"path":"https://r-hyperspec.github.io/unmixR/reference/vca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Interface to Vertex Component Analysis Spectral Unmixing\nImplementations — vca","text":"","code":"data(demo_data) demo <- vca(demo_data, 2, method = \"05\") em <- endmembers(demo) em <- rbind(demo_data[c(7,9),], em) em[3:4,] <- em[3:4,] + 0.5 # a small offset for the found em's matplot(t(em), type = \"l\",    col = c(\"black\", \"blue\", \"black\", \"blue\"), lty = c(1, 1, 2, 2),    xlab = \"frequency\", ylab = \"intensity\",    main = \"mvca of demo_data\") leg.txt <- c(\"Endmember 2\", \"Endmember 3\", \"Endmember 2 (found)\", \"Endmember 3 (found)\") legend(\"topright\", leg.txt, col = c(\"black\", \"blue\", \"black\", \"blue\"), lty = c(1, 1, 2, 2), cex = 0.75)"},{"path":"https://r-hyperspec.github.io/unmixR/reference/vca05.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertex Component Analysis Unmixing Algorithm — vca05","title":"Vertex Component Analysis Unmixing Algorithm — vca05","text":"algorithm based geometry convex sets. exploits fact endmembers occupy vertices simplex. Intended called vca.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/vca05.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertex Component Analysis Unmixing Algorithm — vca05","text":"","code":"vca05(data, p, SNR = estSNR(data, p))"},{"path":"https://r-hyperspec.github.io/unmixR/reference/vca05.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertex Component Analysis Unmixing Algorithm — vca05","text":"data Data matrix. Samples rows frequencies columns. p Number endmembers. SNR Signal--Noise ratio data. default estimated using estSNR.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/vca05.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vertex Component Analysis Unmixing Algorithm — vca05","text":"indices endmembers original dataset.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/vca05.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vertex Component Analysis Unmixing Algorithm — vca05","text":"Nascimento, J.M.P. Bioucas Dias, J.M. \"Vertex component   analysis: fast algorithm unmix hyperspectral data,\" Geoscience   Remote Sensing, vol. 43, . 4, pp. 898-910, April 2005,   doi: 10.1109/TGRS.2005.844293","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/vcaLopez2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified Vertex Component Analysis — vcaLopez2012","title":"Modified Vertex Component Analysis — vcaLopez2012","text":"Modified VCA algorithm aims reduced algorithmic complexity original. Intended called vca.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/vcaLopez2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified Vertex Component Analysis — vcaLopez2012","text":"","code":"vcaLopez2012(data, p, SNR = estSNR(data, p))"},{"path":"https://r-hyperspec.github.io/unmixR/reference/vcaLopez2012.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified Vertex Component Analysis — vcaLopez2012","text":"data Data matrix. Samples rows frequencies columns. p Number endmembers. SNR Signal--Noise ratio data. default estimated using estSNR.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/vcaLopez2012.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modified Vertex Component Analysis — vcaLopez2012","text":"indices endmembers original dataset.","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/vcaLopez2012.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Modified Vertex Component Analysis — vcaLopez2012","text":"debuglevels 1 2 debug information printed (1) plotted (2).","code":""},{"path":"https://r-hyperspec.github.io/unmixR/reference/vcaLopez2012.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Modified Vertex Component Analysis — vcaLopez2012","text":"Lopez, S., Horstrand, P., Callico, G.M., Lopez J.F. Sarmiento, R., \"Low-Computational-Complexity Algorithm Hyperspectral Endmember Extraction: Modified Vertex Component Analysis,\" Geoscience & Remote Sensing Letters, IEEE, vol. 9 . 3 pp. 502-506, May 2012 doi: 10.1109/LGRS.2011.2172771","code":""}]
